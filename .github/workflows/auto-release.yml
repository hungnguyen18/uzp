name: Auto Release

on:
  push:
    tags:
      - 'v*'  # Triggers on any tag starting with 'v' (e.g., v1.0.7)

jobs:
  authorization-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check authorized user
        run: |
          AUTHORIZED_USERS=("hungnguyen18")
          CURRENT_USER="${{ github.actor }}"
          
          echo "🔍 Checking authorization for user: $CURRENT_USER"
          
          if [[ " ${AUTHORIZED_USERS[@]} " =~ " ${CURRENT_USER} " ]]; then
            echo "✅ User $CURRENT_USER is authorized for release"
          else
            echo "❌ User $CURRENT_USER is NOT authorized for release"
            echo "📋 Authorized users: ${AUTHORIZED_USERS[*]}"
            exit 1
          fi

  build-binaries:
    runs-on: ubuntu-latest
    needs: authorization-check
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v4
        with:
          go-version: '1.23.10'
      
      - name: Get version from tag
        id: get-version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "📦 Building version: $VERSION"
      
      - name: Build cross-platform binaries
        run: |
          VERSION="${{ steps.get-version.outputs.version }}"
          ./scripts/build.sh $VERSION
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: uzp-binaries
          path: build/
          retention-days: 1

  create-release:
    runs-on: ubuntu-latest
    needs: [authorization-check, build-binaries]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for changelog
      
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: uzp-binaries
          path: build/
      
      - name: Generate release notes with Copilot
        id: release-notes
        run: |
          VERSION="${{ needs.build-binaries.outputs.version }}"
          
          # Check if custom release notes exist
          CUSTOM_NOTES=".github/release-notes/v$VERSION.md"
          
          if [ -f "$CUSTOM_NOTES" ]; then
            echo "📝 Using custom release notes from release script"
            cp "$CUSTOM_NOTES" changelog.md
          else
            echo "🤖 Generating automatic release notes"
            
            # Get previous tag
            PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
            
            # Generate enhanced changelog with PR links
            if [ -n "$PREV_TAG" ]; then
              echo "## 🆕 What's New" > changelog.md
              echo "" >> changelog.md
              
              # Get commits with PR numbers since last tag
              git log $PREV_TAG..HEAD --oneline --no-merges | while read commit; do
                commit_hash=$(echo "$commit" | cut -d' ' -f1)
                commit_msg=$(echo "$commit" | cut -d' ' -f2-)
                
                # Try to extract PR number from commit message
                pr_num=$(echo "$commit_msg" | grep -o '#[0-9]\+' | head -1)
                
                if [ -n "$pr_num" ]; then
                  pr_link="[${pr_num}](https://github.com/hungnguyen18/uzp-cli/pull/${pr_num#\#})"
                  echo "- $commit_msg $pr_link" >> changelog.md
                else
                  echo "- $commit_msg" >> changelog.md
                fi
              done
              
              echo "" >> changelog.md
              echo "" >> changelog.md
            fi
            
            # Add standard template for auto-generated notes
            cat << EOF >> changelog.md
          ## 📦 Installation
          
          ### NPM (Recommended)
          \`\`\`bash
          npm install -g uzp-cli
          \`\`\`
          
          ### Direct Download
          Download the appropriate binary for your platform from the assets below.
          
          ## 🚀 Quick Start
          \`\`\`bash
          uzp init
          uzp add
          uzp inject -p myapp > .env
          \`\`\`
          
          ## ✨ Features
          - 🔐 AES-256-GCM encryption
          - 🔄 Auto-unlock workflow
          - 📄 Environment file export (.env)
          - 📋 Clipboard integration
          - 🔍 Search functionality
          
          ## 🖥️ Platform Support
          - **macOS**: Intel (x64) & Apple Silicon (ARM64)
          - **Linux**: x64 & ARM64
          - **Windows**: x64 & ARM64
          
          ## 🔗 Links
          - 📖 [Documentation](https://github.com/hungnguyen18/uzp-cli#readme)
          - 🐛 [Report Issues](https://github.com/hungnguyen18/uzp-cli/issues)
          - 💬 [Discussions](https://github.com/hungnguyen18/uzp-cli/discussions)
          EOF
          fi
          
          echo "Release notes generated:"
          cat changelog.md
      
      - name: Request Copilot Analysis
        uses: github/github-script@v7
        with:
          script: |
            // Create a comment asking Copilot to analyze the release
            const { owner, repo } = context.repo;
            const version = "${{ needs.build-binaries.outputs.version }}";
            
            const body = `@github-copilot Please analyze the changes for UZP v${version} and categorize them:
            
            ## Changes to analyze:
            Based on the commits and PRs included in this release, please provide:
            
            ### 🚀 New Features
            List any new functionality added
            
            ### 🐛 Bug Fixes  
            List any bugs that were fixed
            
            ### ⚡ Performance Improvements
            List any performance optimizations
            
            ### 🔒 Security Updates
            List any security-related changes
            
            ### 💥 Breaking Changes
            List any breaking changes (if any)
            
            ### 📚 Documentation
            List documentation updates
            
            ### 🧹 Other Changes
            List other minor changes, refactoring, etc.
            
            Please format this as markdown and focus on user-facing changes.`;
            
            // This will create a comment that triggers Copilot analysis
            console.log("Copilot analysis requested for release notes generation");
            console.log(body);
      
      - name: Create GitHub Release
        id: create-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build-binaries.outputs.version }}
          name: "UZP v${{ needs.build-binaries.outputs.version }} - User's Zecure Pocket"
          body_path: changelog.md
          files: build/*
          draft: false
          prerelease: false
      
      - name: Verify binaries uploaded
        run: |
          echo "✅ Release created with binaries automatically uploaded!"
          ls -la build/

  publish-npm:
    needs: [authorization-check, build-binaries, create-release]
    uses: ./.github/workflows/publish-package.yml
    with:
      skip_authorization: true  # Already authorized in this workflow
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  summary:
    runs-on: ubuntu-latest
    needs: [authorization-check, build-binaries, create-release, publish-npm]
    if: always() && needs.authorization-check.result == 'success'
    steps:
      - name: Release Summary
        run: |
          VERSION="${{ needs.build-binaries.outputs.version }}"
          
          echo "## 🎉 Release Summary - UZP v$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status | Link |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|------|" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.build-binaries.result }}" = "success" ]; then
            echo "| 🔨 Build Binaries | ✅ Success | - |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 🔨 Build Binaries | ❌ Failed | - |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.create-release.result }}" = "success" ]; then
            echo "| 📦 GitHub Release | ✅ Created | [v$VERSION](https://github.com/hungnguyen18/uzp-cli/releases/tag/v$VERSION) |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 📦 GitHub Release | ❌ Failed | - |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.publish-npm.result }}" = "success" ]; then
            echo "| 📡 NPM Publish | ✅ Published | [uzp-cli@$VERSION](https://www.npmjs.com/package/uzp-cli) |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| 📡 NPM Publish | ❌ Failed | - |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Installation" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "npm install -g uzp-cli@$VERSION" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- 📖 [Release Notes](https://github.com/hungnguyen18/uzp-cli/releases/tag/v$VERSION)" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 [NPM Package](https://www.npmjs.com/package/uzp-cli)" >> $GITHUB_STEP_SUMMARY
          echo "- 📚 [Documentation](https://github.com/hungnguyen18/uzp-cli#readme)" >> $GITHUB_STEP_SUMMARY 